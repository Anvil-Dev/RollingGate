name: CI for Mod
on:
  push:
    branches:
      - releases/**
    paths:
      - src/**
      - build.gradle
      - gradle.properties
      - settings.gradle

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CI_BUILD: true
      PR_BUILD: false
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Read Properties
        id: 'properties'
        uses: christian-draeger/read-properties@1.1.1
        with:
          path: gradle.properties
          properties: 'mod_id mod_name java_version'

      - name: Setup Java ${{ steps.properties.outputs.java_version }}
        uses: actions/setup-java@v3.6.0
        with:
          distribution: zulu
          java-version: ${{ steps.properties.outputs.java_version }}

      - name: make gradle wrapper executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew

      - name: Build with Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build
        run: ./gradlew build

      - name: Find correct JAR
        id: find-jar
        run: |
          output="$(find build/libs/ ! -name "*-dev.jar" ! -name "*-sources.jar" -type f -printf "%f\n")"
          echo "jarname=$output" >> $GITHUB_OUTPUT

      - name: capture build artifacts
        if: ${{ runner.os == 'Linux' && matrix.java == '17' }}
        uses: actions/upload-artifact@v3.1.1
        with:
          name: ${{ steps.find-jar.outputs.jarname }}
          path: build/libs/${{ steps.find-jar.outputs.jarname }}

      - name: Publish to maven
        run: ./gradlew publish
        env:
          MAVEN_URL: ${{ secrets.MAVEN_URL }}
          MAVEN_USERNAME: ${{ secrets.MAVEN_USER }}
          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASS }}
        continue-on-error: true